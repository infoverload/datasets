import { ExternalDMMF as DMMF } from './dmmf-types';
declare type Dictionary<T> = Record<string, T>;
export declare class DMMFClass implements DMMF.Document {
    datamodel: DMMF.Datamodel;
    schema: DMMF.Schema;
    mappings: DMMF.Mapping[];
    queryType: DMMF.OutputType;
    mutationType: DMMF.OutputType;
    outputTypes: DMMF.OutputType[];
    outputTypeMap: Dictionary<DMMF.OutputType>;
    inputTypes: DMMF.InputType[];
    inputTypeMap: Dictionary<DMMF.InputType>;
    enumMap: Dictionary<DMMF.Enum>;
    modelMap: Dictionary<DMMF.Model>;
    constructor({ datamodel, schema, mappings }: DMMF.Document);
    getInputType(inputTypeName: string): DMMF.InputType;
    getOutputType(outputTypeName: string): DMMF.OutputType;
    getEnumType(enumTypeName: string): DMMF.Enum;
    getModelOrThrow(modelName: string): DMMF.Model;
    hasModel(modelName: string): boolean;
    getMapping(modelName: string): DMMF.Mapping;
    protected getQueryType(): DMMF.OutputType;
    protected getMutationType(): DMMF.OutputType;
    protected getEnumMap(): Dictionary<DMMF.Enum>;
    protected getModelMap(): Dictionary<DMMF.Model>;
    protected getOutputTypeMap(): Dictionary<DMMF.OutputType>;
    protected getInputTypeMap(): Dictionary<DMMF.InputType>;
}
export {};
