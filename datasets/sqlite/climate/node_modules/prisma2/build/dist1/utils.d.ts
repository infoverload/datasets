import { ExternalDMMF as DMMF } from './dmmf/dmmf-types';
import { IFieldNamingStrategy } from './nexus-prisma/NamingStrategies';
export declare const keyBy: <T>(collection: T[], iteratee: (value: T) => string) => Record<string, T>;
export declare const upperFirst: (s: string) => string;
export declare function flatMap<T, U>(array: T[], callbackfn: (value: T, index: number, array: T[]) => U[]): U[];
export declare function nexusOpts(param: {
    type: string;
    isList: boolean;
    isRequired: boolean;
}): {
    type: any;
    list: true | undefined;
    nullable: boolean;
};
export declare function assertPhotonInContext(photon: any): void;
export declare function trimIfInNodeModules(path: string): string;
export declare function getImportPathRelativeToOutput(from: string, to: string): string;
export declare function getCRUDFieldName(modelName: string, fieldName: string, mapping: DMMF.Mapping, namingStrategy: IFieldNamingStrategy): string;
